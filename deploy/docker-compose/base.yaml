version: "3.8"

services:
  # Traefik 리버스 프록시 서비스
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true" # 대시보드 활성화 (보안 없음)
      - "--providers.docker=true" # Docker 제공자 활성화
      - "--providers.docker.swarmMode=true" # Swarm 모드 지원
      - "--providers.docker.exposedbydefault=false" # 기본적으로 서비스 노출 방지
      - "--entrypoints.web.address=:80" # HTTP 엔트리포인트
    ports:
      - "80:80" # HTTP 포트
      - "8080:8080" # Traefik Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Docker 소켓
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager # Swarm 매니저 노드에서 실행
    networks:
      - lovechedule-network

  # # MongoDB 서비스
  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: 1234
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #   networks:
  #     - lovechedule-network

  # Redis 서비스
  redis:
    image: redis:latest
    container_name: redis
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - lovechedule-network

  # lovechedule 애플리케이션
  lovechedule-server:
    image: soomumu/lovechedule-server:latest
    environment:
      - MONGO_URL=mongodb://root:1234@mongodb:27017/lovechedule?authSource=admin
      - JWT_ACCESS_TOKEN_SECRET=secret
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=365d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_EXPIRED_AT=0
      - WEATHER_API_KEY=ec379cdcda47660851b8bd47f8432f8b
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        # /app 경로 처리
        - "traefik.enable=true"
        - "traefik.http.routers.lovechedule.rule=Host(`lovechedule.com`) && PathPrefix(`/app`)"
        - "traefik.http.routers.lovechedule.entrypoints=web"
        # 내부 서비스 포트 지정
        - "traefik.http.services.lovechedule-service.loadbalancer.server.port=3000" # 내부 서비스 포트
    networks:
      - lovechedule-network

  # 알림 서버 애플리케이션
  notification-server:
    image: soomumu/notification-server:latest
    environment:
      - API_URL=http://lovechedule-server:3000
      - API_KEY=your-api-key-here
      - NODE_ENV=production
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.notification.rule=Host(`lovechedule.com`) && PathPrefix(`/notification`)"
        - "traefik.http.routers.notification.entrypoints=web"
        - "traefik.http.services.notification-service.loadbalancer.server.port=3100"
    networks:
      - lovechedule-network

networks:
  lovechedule-network:
    driver: overlay
